
ORM（Object/Relationship Mapping）对象/关系映射

将持久化对象与数据库使用Properties与XML Mapping连接起来

Object 创建持久化类
    1.类公有
    2.公有的不带参数的构造方法
    3.属性私有
    4.属性使用getter/setter封装
    // 假装创建了一个有sid/sname/gender/birthday的Student类


Hibernate Configuration 配置文件

    // src/hibernate.cfg.xml
    <?xml version='1.0' encoding='utf-8'?>
    <!DOCTYPE hibernate-configuration PUBLIC
            "-//Hibernate/Hibernate Configuration DTD//EN"
            "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
    <hibernate-configuration>
        <session-factory>

            <!--配置数据库信息-->
            <property name="connection.url">jdbc:mysql://localhost:3306/demo</property>
            <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
            <property name="connection.username">root</property>
            <property name="connection.password">root</property>
            <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>

            <property name="show_sql">true</property>
            <property name="format_sql">true</property>
            <property name="hbm2ddl.auto">create</property>

            <mapping resource="Student.hbm.xml"/>  // 类映射文件设置

        </session-factory>
    </hibernate-configuration>


Hibernate Mapping 类映射设置文件

    // src/Student.hbm.xml
    <?xml version='1.0' encoding='utf-8'?>
    <!DOCTYPE hibernate-mapping PUBLIC
            "-//Hibernate/Hibernate Mapping DTD//EN"
            "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
    <hibernate-mapping>
        <class name="Student" table="STUDENT">
            <id name="sid" type="int">
                <column name="SID" />
                <generator class="assigned" />
            </id>
            <property name="sname" type="java.lang.String">
                <column name="SNAME" />
            </property>
            <property name="sname" type="java.lang.String">
                <column name="SNAME" />
            </property>
            <property name="sname" type="java.lang.String">
                <column name="SNAME" />
            </property>
            <property name="sname" type="java.lang.String">
                <column name="SNAME" />
            </property>
            <property name="sname" type="java.lang.String">
                <column name="SNAME" />
            </property>
        </class>
    </hibernate-mapping>


A little bit of Junit模块测试工具

    @Test ：需要被测试方法
    @Before ：初始化方法，先执行
    @After ：用来释放资源，最后执行

    src/test/java/com.example.demo/DemoApplicationTests.class
