IP与端口共同组成Web Socket
端口范围0~65535
重用端口html:80，ftp:21，telnet:23

Java中的网络支持（类库）
    InetAddress:用于表示网络上的硬件资源
    URL:统一资源定位符
    Sockets:使用TCP协议实现网络通信的Socket相关的类
    Datagram:数据报，使用UDP协议，将数据保存在数据报中，通过网络进行通信

    import java.net.*


Java - InetAddress

    public class TryJavaWeb {
        public TryJavaWeb() throws UnknownHostException {     // getHostName()等方法处会引起异常，捕获异常
            InetAddress address = InetAddress.getLocalHost();
            String hostName = address.getHostName();  // 获取主机名
            String ipAddress = address.getHostAddress();  // 获取主机IP地址
            byte[] byteIpAddress = address.getAddress();  // 以字节数组形式返回IP地址

            // 根据主机名获取InetAddress实例
            InetAddress address2 = InetAddress.getByName("camwang");
            InetAddress address3 = InetAddress.getByName("1.1.1.10");
            String ipAddress2 = address2.getHostAddress();
        }
    }

Java - URL

    public class TryJavaWeb {
        public TryJavaWeb() {
            try {
                URL camwang = new URL("http://camwang.com");   // 会引起异常，捕获异常
                URL url = new URL("camwang", "/index.jsp?username=tom")
                String protocol = url.getProtocol();  // 获取页面
                String host = url.getHost();  // 获取主机
                String port = url.getPort();  // 使用了http默认的80端口返回了-1
                String path = url.getPath();  // 获取文件路径
                String path = url.getFile();  // 获取文件
                String path = url.getRef();  // 获取文件相对路径
                String path = url.getQuery();  // 查询字符串（参数）
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
    } 

    URL通过openStream()方法来读取网络流