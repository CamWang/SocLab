String
    .startsWith(Strting s, int offset)
    .endsWith(String s)
    .regionMathches(int )
    .compareTo()
    .indexOf()
    .subString(index) 获取index之后的字符串
    .replaceAll(String old, String new)
    .trim() 去空格

StringTokenizer 分解字符
    StringTokenizer(String s, String delimeter)
    .countTokens()
    .hasMoreTokens()
    .nextToken()

String
    .append()
    .charAt()
    .setCharAt()
    .insert(int index, String str)
    .reverse()
    .delete(int, int)
    .replace(int start, int end, string)
    .matches(regex)

Date
    y yy yyyy
    M MM MMM汉字
    d dd
    H HH
    M MM
    s ss
    E 星期
SimpleDateFormat("事件:yyyy年MM月dd日HH时mm分ss秒")
SimpleDateFormat.format(Date date)
Calendar calendar = Calendar.getInstance();

Frame
    在继承Frame类的类内的构造方法内调用这些
    setBounds(a, b, width, height)
    setVisible(boolean b)
    super(s)设置标题

ActionListener
    Object.addActionListener
    e.getSource()获得引用
    重写actionPerformed(ActionEvent e)
    只要实现ActionListener接口就能addActionListener，

File f = new File("blabalbla")  .delete()
FileInputStream istream = new FileInputStream(f); IOException .read() .close
FileWriter out = new FileWriter();
out.write(a, 0 a.length);

ObjectInputStream ObjectOutputStream对象必须implements Serializable

URL url = new URL("http://....)
InputStream in = url.openStream();

InetAddreass address= InetAddreass.getByName("ip or url")
    .getHostName()
    .getHostAddress()
    套接字就是IP地址与端口号的组合
    Socket socket = new Socket("url", port)
    DataInputStream in = new DataInputStream(socket.getInputStream());
    DataOutputStream out = new DataOutputStream(socket.getOutputStream());
    in.readUTF();
    out.writeUTF();
    Serversocket server_socket = new Serversocket(port);
    server_socket.accept()
    while(true)
    {
        in.readUTF()
    }

LinkedList
    .add()
    .addFirst()
    .addLast()
    .clear()
    .remove(index)
    .get(index)
    .getFirst()
    .set(index, object)
    .contains(object)
    .clone()
    Iterator iter = list.Iterator();
    while(iter.hasNext())
    {
        ....
    }

Stack
    .push(Object)
    .pop()
    .empty()判断是否为空
    .peek()查看栈顶不删除
    .search()顶端为1递增，没有则-1

HashSet()
    .add(object)
    .clear()
    .contains()
    .isEmpth()
    .remove()
    .size()
    .toArray()
    .containsAll()
    .clone()
    .retainAll()求交集
